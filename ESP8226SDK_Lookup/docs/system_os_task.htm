<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html>
<head>
    <title>ESP8266 Help</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style type="text/css">
        body
        {
            font-size: 95%;
        }
        
        h1
        {
            color: #FF0000;
        }
        
        h2
        {
            font-size: large;
            font-weight: bold;
        }
        
        strong, b
        {
            color: Blue;
        }
        
        p
        {
            margin-left: 2em;
        }
        
        li
        {
            margin-top: 10px;
            margin-bottom: 10px;
            list-style-type: none;
        }
    </style>
</head>
<body>
    <div style="width: 100%">
        <h1>
            system_os_task</h1>
        <h2>
            Function:</h2>
        <p>
            Set up tasks</p>
        <h2>
            Prototype:</h2>
        <pre>
    <strong>bool system_os_task(
    os_task_t task,
    uint8 prio,
    os_event_t *queue,
    uint8 qlen
)</strong>
</pre>
        <h2>
            Parameters:</h2>
        <pre>
    <b>os_task_t task</b> : task function
    <b>uint8 prio</b> : task priority. 3 priorities are supported: 0/1/2; 0 is the
    lowest priority. This means only 3 tasks is allowed to set up.
    <b>os_event_t *queue</b> : message queue pointer
    <b>uint8 qlen</b> : message queue depth
</pre>
        <h2>
            Return:</h2>
        <ul>
            <li>true: succeed</li>
            <li>false: fail</li>
        </ul>
        <h2>
            Include:</h2>
        <p>
            osapi.h</p>
        <h2>
            Example:</h2>
        <pre>
    <b>#define SIG_RX 0
    #define TEST_QUEUE_LEN 4
    os_event_t *testQueue;
    void test_task (os_event_t *e) {
        switch (e->sig) {
            case SIG_RX:
            os_printf(sig_rx %c/n, (char)e->par);
            break;
            default:
            break;
        }
    }
    void task_init(void) {
        testQueue=(os_event_t *)os_malloc(sizeof(os_event_t)*TEST_QUEUE_LEN);
        system_os_task(test_task,USER_TASK_PRIO_0,testQueue,TEST_QUEUE_LEN);
    }</b>
</pre>
    </div>
</body>
</html>
